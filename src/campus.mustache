<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title></title>
    <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" type="image/png" href="http://www.qiniu.com/public/v2/img/favicon.ico">
    <link rel="stylesheet" href="./css/common.css">
    <link rel="stylesheet" href="./css/campus.css">
    <link rel="stylesheet" href="./css/video-slider.css">
    <link rel="stylesheet" href="./css/campus-compon.css">
</head>

<body class="recruiting">

    {{> ./partials/header }}

    <div id="campusJobView">
        <section class="title-banner">
            <div class="banner-content">
                <h2 class="banner-title">HELLO WORLD, CRAZY GO!</h2>
                <h2 class="title">极客世界，即刻出发！</h2>
                <h2 class="title-start">七牛 2017 校园招聘</h2>
            </div>
        </section>
        <section class="banner"></section>
        <router-view></router-view>
    </div>

    {{> ./partials/footer }}

    <template id="campus">
        <div class="job-wrap">
            <div class="campus-job-list">
                <ul class="nav nav-tabs">
                    <li v-if="jobInfo.tech.length" :class="currentPath == '/campus/tech' ? 'active': ''">
                        <a v-link="{ path: '/campus/tech'}">技术</a>
                    </li>

                    <li v-if="jobInfo.business.length" :class="currentPath == '/campus/business' ? 'active': ''">
                        <a v-link="{ path: '/campus/business'}">业务</a>
                    </li>

                    <li v-if="jobInfo.product.length" :class="currentPath == '/campus/product' ? 'active': ''">
                        <a v-link="{ path: '/campus/product'}">产品</a>
                    </li>

                    <li v-if="jobInfo.design.length" :class="currentPath == '/campus/design' ? 'active': ''">
                        <a v-link="{ path: '/campus/design'}">设计</a>
                    </li>

                    <li v-if="jobInfo.marketing.length" :class="currentPath == '/campus/marketing' ? 'active': ''">
                        <a v-link="{ path: '/campus/marketing'}">销售</a>
                    </li>

                    <li v-if="jobInfo.function.length" :class="currentPath == '/campus/function' ? 'active': ''">
                        <a v-link="{ path: '/campus/function'}">职能</a>
                    </li>

                    <div class="dropdown">
                        <span class="dropbtn">全部地点</span>
                        <span class="arrow"></span>
                        <div class="dropdown-content">
                            <a href="#1">北京</a>
                            <a href="#2">上海</a>
                            <a href="#3">杭州</a>
                            <a href="#4">广州</a>
                        </div>

                    </div>
                </ul>

            </div>
            <div class="job-list-detail">
                <router-view></router-view>
            </div>
        </div>
    </template>

    <!-- 职位列表模板 -->
    <template id="tech">
        <div class="job-title-content">
            <h2>技术类</h2>
            <h3>开放职位</h3>
        </div>
        <div class="list-items">
            <dl v-link="{ name: 'techdetail', params: {id: item.id,cate:item.job_title} }" v-for="item in tech" class="list-onejob campusJob">
                <dt>{{ item.job_title }}</dt>
                <dd class="place">{{ item.place }}</dd>
                <dd class="pubdate">发布日期：{{ item.time }}</dd>
            </dl>
        </div>
    </template>


    <template id="business">
        <div class="job-title-content">
            <h2>销售类</h2>
            <h3>开放职位</h3>
        </div>
        <div class="list-items">
            <dl v-link="{ name: 'businessdetail', params: {id: item.id,cate:item.job_title} }" v-for="item in business" class="list-onejob campusJob">
                <dt>{{ item.job_title }}</dt>
                <dd class="place">{{ item.place }}</dd>
                <dd class="pubdate">发布日期：{{ item.time }}</dd>
            </dl>
        </div>
    </template>

    <template id="product">
        <div class="job-title-content">
            <h2>产品类</h2>
            <h3>开放职位</h3>
        </div>
        <div class="list-items">
            <dl v-link="{ name: 'productdetail', params: {id: item.id,cate:item.job_title} }" v-for="item in product" class="list-onejob campusJob" data-id="6518">
                <dt>{{ item.job_title }}</dt>
                <dd class="place">{{ item.place }}</dd>
                <dd class="pubdate">发布日期：{{ item.time }}</dd>
            </dl>
        </div>
    </template>


    <template id="design">
        <div class="job-title-content">
            <h2>设计类</h2>
            <h3>开放职位</h3>
        </div>
        <div class="list-items">
            <dl v-link="{ name: 'designdetail', params: {id: item.id,cate:item.job_title} }" v-for="item in design" class="list-onejob campusJob" data-id="6518">
                <dt>{{ item.job_title }}</dt>
                <dd class="place">{{ item.place }}</dd>
                <dd class="pubdate">发布日期：{{ item.time }}</dd>
            </dl>
        </div>
    </template>


    <template id="marketing">
        <div class="job-title-content">
            <h2>销售类</h2>
            <h3>开放职位</h3>
        </div>
        <div class="list-items">
            <dl v-link="{ name: 'marketingdetail', params: {id: item.id,cate:item.job_title} }" v-for="item in marketing" class="list-onejob campusJob" data-id="6518">
                <dt>{{ item.job_title }}</dt>
                <dd class="place">{{ item.place }}</dd>
                <dd class="pubdate">发布日期：{{ item.time }}</dd>
            </dl>
        </div>
    </template>


    <template id="jobfunction">
        <div class="job-title-content">
            <h2>职能类</h2>
            <h3>开放职位</h3>
        </div>
        <div class="list-items">
            <dl v-link="{ name: 'jobfunctiondetail', params: {id: item.id,cate:item.job_title} }" v-for="item in jobfunction" class="list-onejob campusJob" data-id="6518">
                <dt>{{ item.job_title }}</dt>
                <dd class="place">{{ item.place }}</dd>
                <dd class="pubdate">发布日期：{{ item.time }}</dd>
            </dl>
        </div>
    </template>

    <template id="social">
        <div>
            <h1>社会招聘</h1>
            <p>This is the tutorial about vue-router.</p>
        </div>
    </template>

    <!-- 技术职位详情 -->
    <template id="techjobDetail">
        <div class="job-detail">
            <div class="back-to-list">
                <a href="#!/campus/tech">返回职位列表</a>
            </div>

            <div class="campus-job-desc">
                <div class="campus-job-desc-content">
                    <h3 class="job-title">{{jobInfo[$route.params.id].job_title}}</h3>
                    <p class="job-place">工作地点:&nbsp&nbsp{{jobInfo[$route.params.id].place}}</p>
                    <p class="pub-date">职位发布于:&nbsp&nbsp{{jobInfo[$route.params.id].time}}</p>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
                <div class="job-duty-content">
                    <h2 class="job-duty">岗位职责</h2>
                    <ul class="duty-list">
                        <li v-for="duty in jobInfo[$route.params.id].duty">{{duty}}</li>
                    </ul>
                </div>
                <div class="job-req-content">
                    <h2 class="job-duty">任职要求</h2>
                    <ul class="req-list">
                        <li v-for="req in jobInfo[$route.params.id].requirements">{{req}}</li>
                    </ul>
                </div>
                <div class="job-pro-content">
                    <h2 class="job-duty">加分项</h2>
                    <ul class="pro-list">
                        <li v-for="pro in jobInfo[$route.params.id].pro">{{pro}}</li>
                    </ul>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
            </div>
        </div>
    </template>

    <!-- 业务职位详情描述 -->
    <template id="businessjobDetail">
        <div class="job-detail">
            <div class="back-to-list">
                <span></span>
                <a href="#!/campus/business">返回职位列表</a>
            </div>

            <div class="campus-job-desc">
                <div class="campus-job-desc-content">
                    <h3 class="job-title">{{jobInfo[$route.params.id].job_title}}</h3>
                    <p class="job-place">工作地点:&nbsp&nbsp{{jobInfo[$route.params.id].place}}</p>
                    <p class="pub-date">职位发布于:&nbsp&nbsp{{jobInfo[$route.params.id].time}}</p>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
                <div class="job-duty-content">
                    <h2 class="job-duty">岗位职责</h2>
                    <ul class="duty-list">
                        <li v-for="duty in jobInfo[$route.params.id].duty">{{duty}}</li>
                    </ul>
                </div>
                <div class="job-req-content">
                    <h2 class="job-duty">任职要求</h2>
                    <ul class="req-list">
                        <li v-for="req in jobInfo[$route.params.id].requirements">{{req}}</li>
                    </ul>
                </div>
                <div class="job-pro-content">
                    <h2 class="job-duty">加分项</h2>
                    <ul class="pro-list">
                        <li v-for="pro in jobInfo[$route.params.id].pro">{{pro}}</li>
                    </ul>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
            </div>
        </div>
    </template>


    <!-- 产品职位详情描述 -->
    <template id="productjobDetail">
        <div class="job-detail">
            <div class="back-to-list">
                <span></span>
                <a href="#!/campus/product">返回职位列表</a>
            </div>

            <div class="campus-job-desc">
                <div class="campus-job-desc-content">
                    <h3 class="job-title">{{jobInfo[$route.params.id].job_title}}</h3>
                    <p class="job-place">工作地点:&nbsp&nbsp{{jobInfo[$route.params.id].place}}</p>
                    <p class="pub-date">职位发布于:&nbsp&nbsp{{jobInfo[$route.params.id].time}}</p>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
                <div class="job-duty-content">
                    <h2 class="job-duty">岗位职责</h2>
                    <ul class="duty-list">
                        <li v-for="duty in jobInfo[$route.params.id].duty">{{duty}}</li>
                    </ul>
                </div>
                <div class="job-req-content">
                    <h2 class="job-duty">任职要求</h2>
                    <ul class="req-list">
                        <li v-for="req in jobInfo[$route.params.id].requirements">{{req}}</li>
                    </ul>
                </div>
                <div class="job-pro-content">
                    <h2 class="job-duty">加分项</h2>
                    <ul class="pro-list">
                        <li v-for="pro in jobInfo[$route.params.id].pro">{{pro}}</li>
                    </ul>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
            </div>
        </div>
    </template>


    <!-- 设计职位详情描述 -->
    <template id="designjobDetail">
        <div class="job-detail">
            <div class="back-to-list">
                <span></span>
                <a href="#!/campus/design">返回职位列表</a>
            </div>

            <div class="campus-job-desc">
                <div class="campus-job-desc-content">
                    <h3 class="job-title">{{jobInfo[$route.params.id].job_title}}</h3>
                    <p class="job-place">工作地点:&nbsp&nbsp{{jobInfo[$route.params.id].place}}</p>
                    <p class="pub-date">职位发布于:&nbsp&nbsp{{jobInfo[$route.params.id].time}}</p>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
                <div class="job-duty-content">
                    <h2 class="job-duty">岗位职责</h2>
                    <ul class="duty-list">
                        <li v-for="duty in jobInfo[$route.params.id].duty">{{duty}}</li>
                    </ul>
                </div>
                <div class="job-req-content">
                    <h2 class="job-duty">任职要求</h2>
                    <ul class="req-list">
                        <li v-for="req in jobInfo[$route.params.id].requirements">{{req}}</li>
                    </ul>
                </div>
                <div class="job-pro-content">
                    <h2 class="job-duty">加分项</h2>
                    <ul class="pro-list">
                        <li v-for="pro in jobInfo[$route.params.id].pro">{{pro}}</li>
                    </ul>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
            </div>
        </div>
    </template>


    <!-- 销售职位详情描述 -->
    <template id="marketingjobDetail">
        <div class="job-detail">
            <div class="back-to-list">
                <span></span>
                <a href="#!/campus/marketing">返回职位列表</a>
            </div>

            <div class="campus-job-desc">
                <div class="campus-job-desc-content">
                    <h3 class="job-title">{{jobInfo[$route.params.id].job_title}}</h3>
                    <p class="job-place">工作地点:&nbsp&nbsp{{jobInfo[$route.params.id].place}}</p>
                    <p class="pub-date">职位发布于:&nbsp&nbsp{{jobInfo[$route.params.id].time}}</p>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
                <div class="job-duty-content">
                    <h2 class="job-duty">岗位职责</h2>
                    <ul class="duty-list">
                        <li v-for="duty in jobInfo[$route.params.id].duty">{{duty}}</li>
                    </ul>
                </div>
                <div class="job-req-content">
                    <h2 class="job-duty">任职要求</h2>
                    <ul class="req-list">
                        <li v-for="req in jobInfo[$route.params.id].requirements">{{req}}</li>
                    </ul>
                </div>
                <div class="job-pro-content">
                    <h2 class="job-duty">加分项</h2>
                    <ul class="pro-list">
                        <li v-for="pro in jobInfo[$route.params.id].pro">{{pro}}</li>
                    </ul>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
            </div>
        </div>
    </template>




    <!-- 职能职位详情描述 -->
    <template id="functionjobDetail">
        <div class="job-detail">
            <div class="back-to-list">
                <span></span>
                <a href="#!/campus/function">返回职位列表</a>
            </div>

            <div class="campus-job-desc">
                <div class="campus-job-desc-content">
                    <h3 class="job-title">{{jobInfo[$route.params.id].job_title}}</h3>
                    <p class="job-place">工作地点:&nbsp&nbsp{{jobInfo[$route.params.id].place}}</p>
                    <p class="pub-date">职位发布于:&nbsp&nbsp{{jobInfo[$route.params.id].time}}</p>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
                <div class="job-duty-content">
                    <h2 class="job-duty">岗位职责</h2>
                    <ul class="duty-list">
                        <li v-for="duty in jobInfo[$route.params.id].duty">{{duty}}</li>
                    </ul>
                </div>
                <div class="job-req-content">
                    <h2 class="job-duty">任职要求</h2>
                    <ul class="req-list">
                        <li v-for="req in jobInfo[$route.params.id].requirements">{{req}}</li>
                    </ul>
                </div>
                <div class="job-pro-content">
                    <h2 class="job-duty">加分项</h2>
                    <ul class="pro-list">
                        <li v-for="pro in jobInfo[$route.params.id].pro">{{pro}}</li>
                    </ul>
                    <div class="apply-btn"><a href="http://wj.qq.com/s/692657/5975">立即申请</a></div>
                </div>
            </div>
        </div>
    </template>



    <template id="index">
        <section class="campus-jobs">
            <div class="campus-jobs-content">
                <h2>这些机会，期待你加入</h2>
                <p>我们是一个简单的团队，希望成就不简单的事。
                    <br> 我们是一群充满热情，追求创新的人，期待遇见同样的你。
                </p>
                <a href="#!/campus">查看校招岗位</a>
                <ul class="job-list">
                    <li class="job-item job-tech">
                        <div class="job-img"></div>
                        <p class="job-desc">技术</p>
                    </li>
                    <li class="job-item job-business">
                        <div class="job-img"></div>
                        <p class="job-desc">市场</p>
                    </li>
                    <li class="job-item job-product">
                        <div class="job-img"></div>
                        <p class="job-desc">产品</p>
                    </li>
                    <li class="job-item job-design">
                        <div class="job-img"></div>
                        <p class="job-desc">设计</p>
                    </li>
                    <li class="job-item job-marketing">
                        <div class="job-img"></div>
                        <p class="job-desc">销售</p>
                    </li>
                    <li class="job-item job-function">
                        <div class="job-img"></div>
                        <p class="job-desc">职能</p>
                    </li>
                </ul>
            </div>
        </section>

        <span class="border-line"></span>

        <section class="campus-process" id="campus-process">
            <h2 class="process-title">校招流程</h2>
            <div class="process-container">
                <div class="nav-tab">
                    <ul class="tab-list">
                        <li class="tab-item">
                            <a v-link="{ path: '/index/advanced',activeClass: 'active'}">提前批内推</a>
                        </li>
                        <li class="tab-item">
                            <span></span>
                        </li>
                        <li class="tab-item">
                            <a v-link="{ path: '/index/unified',activeClass: 'active'}">统一校招</a>
                        </li>
                    </ul>
                </div>
                <!--用于渲染匹配的组件 此处为校招行程-->
                <router-view></router-view>
            </div>
        </section>

        <section class="campus-journey">
            <div class="journey-map">
            </div>
            <div class="journey-desc">
                <div class="journey-desc-content">
                    <h2>宣讲行程</h2>
                    <p>
                        我们将会在上海、杭州、南京、合肥、北京、武汉等城市进行校园宣讲会，具体时间待定，敬请期待。
                    </p>
                </div>
            </div>
        </section>

        <section class="they-said" id="app">
            <div class="they-said-content">
                <text-slider></text-slider>
            </div>
        </section>

        <span class="border-line"></span>
        <section class="video-banner" id="video-container">
            <video-slider>
            </video-slider>
        </section>

    </template>




    <template id="text-slider">
        <ul class="clearfix slide-animate" v-bind:style='getClass'>
            <li v-for="item in textData" v-bind:current="current">
                <div class="people-info">
                    <div class="avatar">
                        <img v-bind:src="item.imgsrc" v-bind:alt="item.name" />
                    </div>
                    <div class="name">
                        <h3>{{item.name}}</h3>
                    </div>
                    <div class="job-title">
                        <p>{{item.job_title}}</p>
                    </div>
                </div>
                <div class="people-said">
                    <p>
                        “{{item.content}}”
                    </p>
                </div>
            </li>
        </ul>

        <div class="change-btn">
            <div v-on:click="turnToPrev" class="left">

            </div>
            <div v-on:click="turnToNext" class="right">

            </div>
        </div>
    </template>

    <!-- 统一行程模板 -->
    <template id="unified">
        <ul class="process-list">
            <li class="process-item">
                <span class="time">8 月底 － 9 月底</span>
                <span class="event">笔试报名</span>
                <p class="desc">此次校招不提前收简历，请点击链接报名笔试完成申请。
                    <br>我们会向所有报名的学生发送笔试通知，并邀请通过的学生投递简历。
                </p>
            </li>
            <li class="process-item">
                <span class="time">9 月底 － 10 月初</span>
                <span class="event">线上笔试</span>
                <p class="desc">线上笔试将分为３个岗位，2 个批次。
                    <br>请同学们根据自身时间安排，挑选相应的场次参加。
                </p>
            </li>
            <li class="process-item">
                <span class="time">10 月初 － 10 月中</span>
                <span class="event">面试</span>
                <p class="desc">我们将根据意向工作地及目前所在城市，协调安排面试形式及地点。
                    <br>外地学生会尽量安排远程面试，请随时保持手机畅通。
                </p>
            </li>
            <li class="process-item">
                <span class="time">10 月底 － 11 月初</span>
                <span class="event">发放 Offer</span>
                <p class="desc">我们会给面试通过的同学发放 Offer。</p>
            </li>
        </ul>
    </template>

    <!-- 提前行程模板 -->
    <template id="advanced">
        <ul class="process-list">
            <li class="process-item">
                <span class="time">8月10日~9月10日</span>
                <span class="event">简历内推</span>
                <p class="desc">七牛员工和校园大使很乐意帮你提前拿到校招 offer。
                    <br>若内推不通过，不会影响正式校招，依然可参加线上笔试。
                </p>
            </li>
            <li class="process-item">
                <span class="time">8月22日~9月23日</span>
                <span class="event">面试</span>
                <p class="desc"> 内推简历无需参加笔试，若简历筛选通过将收到面试邀请。
                    <br>外地学生会安排远程面试，请随时保持手机畅通。
                </p>
            </li>
            <li class="process-item">
                <span class="time">９月底～10月初</span>
                <span class="event">提前 offer</span>
                <p class="desc">我们会在正式笔试开始前发出部分 offer，希望提前认识你。
                </p>
            </li>
        </ul>
    </template>

    <!-- 视频轮播模板 -->
    <template id="video-slider">
        <section v-if="videoID == 0" class="slogan">
            <div class="slogan-content">
                <h2>七牛，缩短想法到产品的距离</h2>
                <p>七牛人一直在全力打造高效稳定的云服务平台，并基于此提供了一站式数据管理服务，使客户缩短了产品从个想法到上线的距离。</p>
            </div>
        </section>
        <section v-if="videoID == 1" class="slogan">
            <div class="slogan-content">
                <h2>七牛 2017 校园招聘</h2>
                <p>Hello World crazy Go
                    <br>七牛期待你的加入</p>
            </div>
        </section>
        <div class="slide-container">
            <div class="slider-wrap">
                <ul class="clearfix slide-animate" v-bind:style='getClass'>
                    <li v-for="item in videoData" v-bind:current="current">
                        <a href="javascript:void(0)">
                            <img v-bind:src="item.poster" />
                        </a>
                        <!--播放按钮-->
                        <div class="player_btn">
                            <div class="player_pause" v-bind:class="styleObject == item.id ? 'notActive': 'Active'" v-on:click="play(item.id)"></div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="video-change-btn">
            <div v-on:click="turnToPrev" class="left">

            </div>
            <div v-on:click="turnToNext" class="right">

            </div>
        </div>
        <modal :show.sync="showModal" :ready-play-id.sync="readyPlayId" :ready-play-src.sync="readyPlaySrc" :stop-player.sync="stopPlayer">

        </modal>
    </template>
    <!-- 视频弹窗模板 -->

    <template id="modal-template">
        <div class="modal-mask" v-show="show" transition="modal" v-if="readyPlaySrc !==''">
            <div class="modal-wrapper">
                <div class="modal-container">
                    <div class="modal-body">
                        <slot name="body">
                            <div class="modal-default-button" v-on:click="close"></div>
                            <video class="video-js vjs-default-skin" width="1280px" autoplay height="720px" v-bind:id="readyPlayId" v-bind:style="" preload controls>
                                <source v-bind:src="readyPlaySrc" type="video/mp4" />
                            </video>
                        </slot>
                    </div>
                </div>
            </div>
        </div>
    </template>




    <script src="js/vue.js"></script>
    <script src="js/vue-router.js"></script>
    <script src="js/compus-compon.js"></script>
    <script>
        // 统一校招组件
        var Unified = Vue.extend({
            template: '#unified',
            data: function() {
                return {
                    msg: '统一校招组件',
                    currentPath: ''
                }
            },
            route: {
                data: function(transition) {
                    transition.next({
                        currentPath: transition.to.path
                    })
                }
            }
        })

        /* 提前批组件*/
        var Advanced = Vue.extend({
            template: '#advanced'
        })

        /*首页组件*/
        var Index = Vue.extend({
                template: '#index'
            })
            /////////////////////////////////////////////////////////////////////////////////////////////////
            //校招组件
        var Campus = Vue.extend({
            template: '#campus',
            data: function() {
                return {
                    msg: '校招组件',
                    currentPath: '',
                    jobInfo: jobInfo
                }
            },
            route: {
                data: function(transition) {
                    transition.next({
                        currentPath: transition.to.path
                    })


                }
            }
        })



        //技术 tab 招聘标签
        var Tech = Vue.extend({
            template: '#tech',
            data: function() {
                return {
                    msg: '技术组件',
                    currentPath: '',
                    tech: jobInfo.tech,

                }
            }
        })

        var Business = Vue.extend({
            template: '#business',
            data: function() {
                return {
                    msg: '业务组件',
                    currentPath: '',
                    business: jobInfo.business
                }
            }
        })

        var Product = Vue.extend({
            template: '#product',
            data: function() {
                return {
                    msg: '产品组件',
                    currentPath: '',
                    product: jobInfo.product
                }
            }
        })

        var Design = Vue.extend({
            template: '#design',
            data: function() {
                return {
                    msg: '设计组件',
                    currentPath: '',
                    design: jobInfo.design
                }
            }
        })

        var Marketing = Vue.extend({
            template: '#marketing',
            data: function() {
                return {
                    msg: '市场组件',
                    currentPath: '',
                    marketing: jobInfo.marketing
                }
            }
        })

        var Jobfunction = Vue.extend({
            template: '#jobfunction',
            data: function() {
                return {
                    msg: '业务组件',
                    currentPath: '',
                    jobfunction: jobInfo.function
                }
            }
        })


        /*详情组件*/
        //tech JD 详情
        var techJobDetail = Vue.extend({
            template: '#techjobDetail',
            data: function() {
                return {
                    msg: 'tech 职位数据',
                    currentPath: '',
                    jobInfo: jobInfo.tech
                }
            }
        })

        //business JD 详情
        var businessJobDetail = Vue.extend({
            template: '#businessjobDetail',
            data: function() {
                return {
                    msg: 'business 职位数据',
                    jobInfo: jobInfo.business
                }
            }
        })


        //product JD 详情
        var productJobDetail = Vue.extend({
            template: '#productjobDetail',
            data: function() {
                return {
                    msg: 'business 职位数据',
                    jobInfo: jobInfo.product
                }
            }
        })


        //design JD 详情
        var designJobDetail = Vue.extend({
            template: '#designjobDetail',
            data: function() {
                return {
                    msg: 'design 职位数据',
                    jobInfo: jobInfo.design
                }
            }
        })

        //marketing JD 详情
        var marketingJobDetail = Vue.extend({
            template: '#marketingjobDetail',
            data: function() {
                return {
                    msg: 'marketing 职位数据',
                    jobInfo: jobInfo.marketing
                }
            }
        })

        //marketing JD 详情
        var functionJobDetail = Vue.extend({
                template: '#functionjobDetail',
                data: function() {
                    return {
                        msg: 'function 职位数据',
                        jobInfo: jobInfo.function
                    }
                }
            })
            /////////////////////////////////////////////////////////////////////////////////////////////////


        /* 创建路由器  */
        var router = new VueRouter()
            // 默认路由
        router.redirect({
                '/': '/index/advanced',
                '/index': '/index/advanced',
                '/campus': '/campus/tech'
            })
            /* 创建路由映射  */
        router.map({
                '/index': {
                    component: Index,
                    subRoutes: {
                        '/advanced': {
                            // This component will be rendered into Foo's <router-view>
                            // when /foo is matched. Using an inline component definition
                            // here for convenience.
                            component: Advanced
                        },
                        '/unified': {
                            // Bar will be rendered inside Foo's <router-view>
                            // when /foo/bar is matched
                            component: Unified
                        }
                    }
                },
                '/campus': {
                    component: Campus,
                    // 定义子路由
                    subRoutes: {
                        '/tech': {
                            name: 'tech',
                            component: Tech
                        },

                        'techdetail/:id': {
                            name: 'techdetail',
                            component: techJobDetail
                        },
                        '/business': {
                            name: 'business',
                            component: Business
                        },
                        'businessdetail/:id': {
                            name: 'businessdetail',
                            component: businessJobDetail
                        },
                        '/product': {
                            name: 'product',
                            component: Product
                        },
                        'productdetail/:id': {
                            name: 'productdetail',
                            component: productJobDetail
                        },
                        '/design': {
                            name: 'design',
                            component: Design
                        },
                        'designdetail/:id': {
                            name: 'designdetail',
                            component: designJobDetail
                        },
                        '/marketing': {
                            name: 'marketing',
                            component: Marketing
                        },
                        'marketingdetail/:id': {
                            name: 'marketingdetail',
                            component: marketingJobDetail
                        },
                        '/function': {
                            name: 'jobfunction',
                            component: Jobfunction
                        },
                        'functiondetail/:id': {
                            name: 'jobfunctiondetail',
                            component: functionJobDetail
                        },
                    }
                }
            })
            /* 启动路由  */
        var CampusProcessTab = Vue.extend({})
        router.start(CampusProcessTab, '#campusJobView')
    </script>
    <script type="text/javascript">
        Vue.component('text-slider', {
            template: '#text-slider',
            data: function() {
                return {
                    currentIdx: 0,
                    currentLeft: 0 + 'px',
                    autoplay: false,
                    timer: null, //
                    textData: [{
                        name: '马逸清',
                        job_title: '前端开发工程师',
                        graduate: '2013 年毕业于上海大学',
                        href: '#',
                        imgsrc: './img/avatar/myq.png',
                        alt: '',
                        content: '由于提供的是技术类的产品，业务和技术的关系非常紧密，这也让我们的技术氛围比较好，是比较典型的工程师文化。我们喜欢思考问题的本质，尽量用简单的规则和办法去解决看似复杂的问题。这也是公司一直以来崇尚的文化，简单可信赖。'
                    }, {
                        name: '宋文灏',
                        job_title: '后端开发工程师',
                        graduate: '2016年毕业于上海交通大学',
                        href: '#',
                        imgsrc: './img/avatar/swh.png',
                        alt: '',
                        content: '如果你能够自发性地学习，希望得到快速的成长，希望尝试和大公司不一样的工作体验，有追求有理想，觉得年轻的时候不奋斗一下有点可惜，那么七牛对你来说可能是个不错的选择。'
                    }, {
                        name: '邵羽',
                        job_title: '后端开发工程师',
                        graduate: '2016年毕业于上海交通大学',
                        href: '#',
                        imgsrc: './img/avatar/sy.png',
                        alt: '',
                        content: '我是 2015 年 5 月 25 日加入七牛的。碰巧的是，我的入党日期也是 5 月 25 日，当时就有朋友开玩笑说在“我爱我”日这一天加入中国共产党是你送给自己最好的礼物，如今我也同样自豪的认为：在这一天加入七牛是我送给自己最好的礼物。'
                    }, {
                        name: '陈心',
                        job_title: '后端开发工程师',
                        graduate: '2016 年毕业于上海交通大学',
                        href: '#',
                        imgsrc: './img/avatar/cx.png',
                        alt: '',
                        content: '我是个比较害羞的人，对人际交往很不在行。但是七牛真的让人很放松，没有多余的社交，大家都专心做手头上的事情，在工作中建立友情。这是一家简单的公司，但是大家一起努力做着不简单的事。'
                    }, {
                        name: '罗轶斯',
                        job_title: '活动运营专员',
                        graduate: '2015 年毕业于四川音乐学院',
                        href: '#',
                        imgsrc: './img/avatar/lys.png',
                        alt: '',
                        content: '七牛给我的最大的感觉就是，工作氛围很好。在工作中，每一位小伙伴从专员到 CMO，每个人都在认真负责着自己的工作，毫不懈怠，我觉得年轻人就应该在这种工作圈中工作，才会得到提升。所以一直庆幸选择了七牛。'
                    }, {
                        name: '常龙',
                        job_title: '销售管培生',
                        graduate: '2016 年毕业于东北石油大学',
                        href: '#',
                        imgsrc: './img/avatar/cl.png',
                        alt: '',
                        content: '在七牛，你的个性可以得到充分的发挥。你不要担心别人会束缚你，你只需要尽情的舒展自己。所以在七牛，我有一种恋爱的感觉，这儿的环境很舒畅，让你不自觉的就融入其中。大家都是那么努力，所以你也在努力，让自己成为一个更好的自己。'
                    }]
                }
            },
            computed: {
                getClass: {
                    get: function() {
                        var textArray = this.textData;
                        return {
                            width: textArray.length * 940 + 'px',
                            left: this.currentLeft
                        }
                    },
                    set: function(currentIdx) {
                        this.currentLeft = -940 * currentIdx + 'px'
                    }
                }
            },
            methods: {
                turn: function(i) {
                    //首先是让now = 1
                    var now = this.currentIdx + i;
                    var textArray = this.textData;
                    // console.log(now)
                    // 如果now == 0 说明是在第一张点击了一个向后的btn  {要么在第一张不动[此处选择0]， 要么返回第三张 --循环显示}
                    if (now < 0) {
                        now = 0;
                        console.log("前面已经没有啦")
                    }
                    //循环显示
                    if (now >= textArray.length) {
                        now = now - textArray.length;
                        // console.log(now)
                    }
                    this.getClass = now;
                    this.currentIdx = now;
                    console.log("当前区域 ID :" + this.currentIdx);
                },
                autoPlay: function() {
                    var _that = this;
                    this.timer = setInterval(function() {
                        _that.turn(1)
                    }, 3000);
                    console.log("自动轮播中~")
                },
                pause: function() {
                    clearInterval(this.timer)
                },
                turnToPrev: function() {
                    // this.pause(); //先关掉定时器 然后在turn()
                    this.turn(-1);
                },
                turnToNext: function() {
                    // this.pause();
                    this.turn(1);
                }
            },
            ready: function() {
                if (this.autoplay == true) {
                    this.autoPlay();
                }
            }
        })
        var slide = new Vue({
            el: '#app',
        })

        /*****视频轮播组件****/
        var Parent = Vue.extend({
                template: '#video-slider',
                components: {
                    'Modal': {
                        template: '#modal-template',
                        methods: {
                            close: function() {
                                console.log("click close");
                                //关闭模态框
                                this.show = false;
                                // // PlayID 置空
                                this.readyPlayId = '';
                                // // // PlaySrc 置空
                                this.readyPlaySrc = '';
                                this.stopPlayer = true;
                                console.log("stopPlayer 值:" + this.stopPlayer);
                                //当前为利用异常停止
                            }
                        },
                        props: {
                            show: {
                                type: Boolean,
                                required: true,
                                twoWay: true
                            },
                            readyPlayId: {
                                type: String
                                    // required: true,
                                    // twoWay: true
                            },
                            readyPlaySrc: {
                                type: String
                                    // required: true,
                                    // twoWay: true
                            },
                            stopPlayer: {
                                type: Boolean
                                    // required: true,
                                    // twoWay: true
                            },
                        }
                    }

                },
                data: function() {
                    return {
                        currentIdx: 0,
                        currentLeft: 0 + 'px',
                        autoplay: false,
                        timer: null,
                        videoData: [{
                            id: '0',
                            name: 'video1',
                            href: 'javascript:void(0)',
                            src: 'http://7xilik.com5.z0.glb.clouddn.com/qiniu-live.mp4',
                            poster: './img/campus/slider/Video-2.jpg',
                            contentType: 'video/mp4',
                            desc_title: '七牛，缩短想法到产品的距离',
                            desc: '七牛人一直在全力打造高效稳定的云服务平台，并基于此提供了一站式数据管理服务，能有效地帮助开发者提高开发效率、优化产品体验和降低业务风险，使客户缩短了产品从个想法到上线的距离。'
                        }, {
                            id: '1',
                            name: 'video2',
                            href: '#2',
                            src: 'http://7u2eut.com1.z0.glb.clouddn.com/HelloworldCrazygo.mp4',
                            poster: './img/campus/slider/Video-1.jpg',
                            contentType: 'video/mp4',
                            desc_title: '七牛 2017 校园招聘',
                            desc: 'Hello World, Crazy Go!<br>七牛，期待你的加入！'
                        }],
                        styleObject: null,
                        videoID: 0,
                        showModal: false,
                        readyPlayId: '',
                        readyPlaySrc: '',
                        playing: null,
                        stopPlayer: null

                    }
                },
                computed: {
                    getClass: {
                        get: function() {
                            var videoArray = this.videoData;
                            return {
                                width: videoArray.length * 660 + 'px',
                                left: this.currentLeft
                            }
                        },
                        set: function(currentIdx) {
                            this.currentLeft = -660 * currentIdx + 'px';
                            this.videoID = currentIdx;

                        }
                    },
                    setVideoSrc: {
                        get: function() {
                            // this.readyPlaySrc;

                        },
                        set: function(currentVideoSrc) {
                            this.readyPlaySrc = currentVideoSrc;
                        }
                    },
                    setVideoId: {
                        get: function() {
                            // this.readyPlayId;

                        },
                        set: function(currentVideoId) {
                            this.readyPlayId = currentVideoId;
                            console.log("Set Video" + currentVideoId);
                        }
                    },
                    stopVideo: {
                        get: function() {
                            // this.stopPlayer;

                        },
                        set: function(currentVideoId) {
                            // console.log(this.stopPlayer);
                        }
                    }
                },
                methods: {
                    turn: function(i) {
                        //首先是让now = 1
                        var now = this.currentIdx + i;
                        var videoArray = this.videoData;
                        // console.log(now)
                        // 如果now == 0 说明是在第一张点击了一个向后的btn  {要么在第一张不动[此处选择0]， 要么返回第三张 --循环显示}
                        if (now < 0) {
                            now = 0;
                            console.log("前面已经没有啦")
                        }
                        //循环显示
                        if (now >= videoArray.length) {
                            now = now - videoArray.length;
                            // console.log(now)
                        }
                        this.getClass = now;
                        this.currentIdx = now;
                        console.log("当前视频 ID :" + this.currentIdx);
                    },
                    autoPlay: function() {
                        var _that = this;
                        this.timer = setInterval(function() {
                            _that.turn(1)
                        }, 3000);
                        console.log("自动轮播中~")
                    },
                    pause: function() {
                        clearInterval(this.timer)
                    },
                    turnToPrev: function() {
                        // this.pause(); //先关掉定时器 然后在turn()
                        this.turn(-1);
                    },
                    turnToNext: function() {
                        // this.pause();
                        this.turn(1);
                    },
                    play: function(videoId) {
                        var clickVideoName = this.videoData[videoId].name;
                        console.log("点击视频:" + videoId);
                        //切换文字
                        this.videoID = videoId;
                        //设置 SRC
                        this.setVideoSrc = this.videoData[videoId].src;
                        //设置 ID name
                        this.setVideoId = clickVideoName;
                        //显示模态框
                        this.showModal = true;

                        /* videojs 这坑先不填,后期自定义皮肤 */

                        //     // this.turnToNext();
                        // 是否显示播放 btn
                        // this.styleObject = videoId;
                        // 初始化播放器
                        // var player = videojs('video2', {
                        //         /* Options */
                        //     },
                        //     function() {
                        //         console.log('播放就绪');
                        //         // 开始播放
                        //         this.play();
                        //         // 播放结束事件
                        //         this.on('ended', function() {
                        //             console.log('播放结束');
                        //         });
                        //     });

                    }
                },
                ready: function() {
                    if (this.autoplay == true) {
                        this.autoPlay();
                    }
                }
            })
            // 全局注册Parent组件
        Vue.component('video-slider', Parent);

        var videoSlide = new Vue({
            el: '#video-container'
        })
    </script>
</body>

</html>
